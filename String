'''Implement the function isIn(char, aStr) which implements the above idea recursively to test if char is in aStr. 
char will be a single character and aStr will be a string that is in alphabetical order. The function should return a boolean value.
'''
def isIn(char, aStr):
    '''
    char: a single character
    aStr: an alphabetized string
    returns: True if char is in aStr; False otherwise
    '''
    # Your code here
    if aStr=='':
        return False

    if len(aStr)==1:
        return char == aStr[0]

    midIndex = int((len(aStr)/2))
    midChar = aStr[midIndex]

    if char == midChar:
        return True
    elif char < midChar:
        return isIn(char, aStr[:midIndex])
    else:
        return isIn(char, aStr[midIndex+1:])
